package constants

import (
	"errors"
	"fmt"
)

var (
	ErrCustomValidator              = errors.New("custom validator error")
	ErrServeFailed                  = errors.New("aplikasi gagal dijalankan")
	ErrPanic                        = errors.New("defer!")
	ErrSomethingWentWrong           = errors.New("something went wrong")
	ErrValidation                   = errors.New("validation error")
	ErrValidationRequired           = errors.New("%s must be filled")
	ErrValidationMax                = errors.New("%s max character")
	ErrValidationOneOF              = errors.New("value %s not match")
	ErrFailedSigning                = errors.New("signing Error")
	ErrUnauthorized                 = errors.New("unauthorized")
	ErrCredentialNotFound           = errors.New("credential not found")
	ErrDuplicatedProxyNumber        = errors.New("duplicate proxy number")
	ErrDuplicatedUser               = errors.New("user already exists")
	ErrFailedJSONMarshal            = errors.New("failed to convert json")
	ErrConfigurationSQLServer       = errors.New("error config sql")
	ErrConfiguration                = errors.New("failed to config")
	ErrNoConfiguration              = errors.New("config not found")
	ErrConnectionPostgres           = errors.New("failed to open connection postgresql")
	ErrRequestTimeout               = errors.New("process takes too long")
	ErrGenerateCEK                  = errors.New("failed create content encryption key")
	ErrCardNotFound                 = errors.New("card not found")
	ErrNoResponseFromRaya           = errors.New("empty response from raya")
	ErrPublicKeyIsEmpty             = errors.New("public key empty")
	ErrPrivateKeyIsEmpty            = errors.New("private key empty")
	ErrCEKIsEmpty                   = errors.New("CEK is empty")
	ErrTransactionNotFound          = errors.New("transaction not found")
	ErrGetPayoad                    = errors.New("error get payload")
	ErrDecodeBase64PrivateKey       = errors.New("failed to decode base64 private key: %v")
	ErrDecodeBase64PublicKey        = errors.New("failed to decode base64 public key: %v")
	ErrParseECPrivateKey            = errors.New("failed to parse EC private key: %v")
	ErrParsePublicKey               = errors.New("failed to parse public key: %v")
	ErrNotECDSAPublicKey            = errors.New("public key is not of type *ecdsa.PublicKey")
	ErrDecodeAPIKey                 = errors.New("failed to decode API key: %w")
	ErrFailedGenerateJWK            = errors.New("failed to create JWK: %w")
	ErrFailedEncryptJWT             = errors.New("failed to decrypt JWT: %w")
	ErrFailedDecryptJWE             = errors.New("failed to decrypt JWE: %w")
	ErrUnmarshalClaim               = errors.New("failed to unmarshal claims: %w")
	ErrCreateRequest                = errors.New("failed to create request: %v")
	ErrPerformRequest               = errors.New("failed to perform request: %v")
	ErrReadResponseBody             = errors.New("failed to read response body: %v")
	ErrInvalidRequestBody           = errors.New("invalid body request")
	ErrFromInf                      = errors.New("response error from infinitium")
	ErrMerchantName                 = errors.New("merchant name not found")
	ErrDescFromInf                  = fmt.Errorf("%s")
	ErrNotifCardInActive            = errors.New("card inactive")
	ErrNotifAccountIdNotFound       = errors.New("account id not found")
	ErrNotifInvalidAuthMethod       = errors.New("invalid authentication method")
	ErrNotifAuthMethodMismatch      = errors.New("authentication method mismatch")
	ErrNotifUnrecogMsgFormat        = errors.New("unrecognized message format")
	ErrNotifElementMissing          = errors.New("required data element missing or data element not in the required format")
	ErrNotifFailedSend              = errors.New("fail to send push notification")
	ErrNotifFailedCommunicateServer = errors.New("failed to communicate with server")
	ErrNotifFailedOrError           = errors.New("failed or error")
	ErrUserNotFound                 = errors.New("user not found")
	ErrAuthorizationBearer          = errors.New("missing authorization bearer")
	ErrRoleNotMatch                 = errors.New("role not match")
)
